name: 🔍 New Repository Auto-Setup Monitor

on:
  schedule:
    # Runs every hour to catch new repos
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update all repos'
        required: false
        default: false
        type: boolean

jobs:
  monitor-and-setup:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Template Repository
        uses: actions/checkout@v4

      - name: 🔍 Detect New Repositories
        id: detect_new_repos
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Scanning for repositories without Claude Fixer..."

          # Get all repos
          all_repos=$(gh repo list chudeemeke --limit 100 --json name,createdAt,pushedAt --jq '.[] | .name')

          # Track repos needing updates
          repos_to_update=""
          new_count=0

          for repo in $all_repos; do
            echo "Checking $repo..."

            # Check if Claude workflow exists
            has_claude=$(gh api "repos/chudeemeke/$repo/contents/.github/workflows" 2>/dev/null | jq -r '.[] | .name' | grep -i claude || echo "")

            if [ -z "$has_claude" ] || [ "${{ github.event.inputs.force_update }}" == "true" ]; then
              echo "  ⚠️ $repo needs Claude Fixer"
              repos_to_update="$repos_to_update $repo"
              ((new_count++))
            else
              echo "  ✅ $repo already has Claude Fixer"
            fi
          done

          echo "REPOS_TO_UPDATE=$repos_to_update" >> $GITHUB_OUTPUT
          echo "NEW_COUNT=$new_count" >> $GITHUB_OUTPUT

          echo "======================================"
          echo "📊 Found $new_count repositories needing updates"
          echo "======================================"

      - name: 🚀 Auto-Setup Claude Fixer
        if: steps.detect_new_repos.outputs.NEW_COUNT > 0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          repos="${{ steps.detect_new_repos.outputs.REPOS_TO_UPDATE }}"

          for repo in $repos; do
            echo "======================================"
            echo "🔧 Setting up $repo..."
            echo "======================================"

            # Clone the repository
            git clone "https://github.com/chudeemeke/$repo.git" "/tmp/$repo" 2>/dev/null || continue
            cd "/tmp/$repo"

            # Create .github/workflows directory
            mkdir -p .github/workflows

            # Copy Claude workflows
            cp $GITHUB_WORKSPACE/.github/workflows/claude-universal-fixer.yml .github/workflows/
            cp $GITHUB_WORKSPACE/workflow-templates/* .github/workflows/ 2>/dev/null || true

            # Check if CLAUDE.md exists, if not create it
            if [ ! -f "CLAUDE.md" ]; then
              cat > CLAUDE.md << 'EOF'
# CLAUDE.md

This project has the Universal Claude CI/CD Fixer enabled.

## Features
- Automatic detection of project type and language
- Intelligent fix application for all CI/CD issues
- Self-healing builds and deployments

## How It Works
1. On every push or PR, Claude analyzes the codebase
2. If any CI/CD issues are detected, they are automatically fixed
3. Fixes are committed back to the repository

## Manual Trigger
Go to Actions → Universal Claude CI/CD Fixer → Run workflow

## Configuration
The fixer works out-of-the-box with zero configuration required.
EOF
            fi

            # Commit and push
            git config user.email "chude@emeke.org"
            git config user.name "Chude"
            git add -A

            if [ -n "$(git status --porcelain)" ]; then
              git commit -m "Auto-setup: Add Universal CI/CD Fixer

              - Automatically added by New Repository Monitor
              - Enables self-healing CI/CD pipelines
              - Zero configuration required"

              git push origin main || git push origin master || echo "Push failed for $repo"

              # Ensure ANTHROPIC_API_KEY is set
              gh secret set ANTHROPIC_API_KEY -b "$ANTHROPIC_KEY" --repo "chudeemeke/$repo" 2>/dev/null || true

              echo "✅ Successfully set up $repo!"
            else
              echo "ℹ️ $repo already up to date"
            fi

            cd -
            rm -rf "/tmp/$repo"
          done

      - name: 📊 Summary Report
        if: always()
        run: |
          echo "======================================"
          echo "New Repository Monitor Report"
          echo "======================================"
          echo "Timestamp: $(date)"
          echo "Repositories Checked: $(echo '${{ steps.detect_new_repos.outputs.REPOS_TO_UPDATE }}' | wc -w)"
          echo "Updates Applied: ${{ steps.detect_new_repos.outputs.NEW_COUNT }}"
          echo "======================================"

      - name: 📧 Notify on Updates
        if: steps.detect_new_repos.outputs.NEW_COUNT > 0
        uses: actions/github-script@v7
        with:
          script: |
            const repos = '${{ steps.detect_new_repos.outputs.REPOS_TO_UPDATE }}'.split(' ').filter(r => r);
            const count = ${{ steps.detect_new_repos.outputs.NEW_COUNT }};

            // Create an issue to notify about updates
            await github.rest.issues.create({
              owner: 'chudeemeke',
              repo: '.github',
              title: `Universal Fixer added to ${count} new repositories`,
              body: `The Universal CI/CD Fixer has been automatically added to the following repositories:\n\n${repos.map(r => `- [${r}](https://github.com/chudeemeke/${r})`).join('\n')}\n\n✅ All repositories now have self-healing CI/CD pipelines!`,
              labels: ['automation', 'universal-fixer']
            });